name: example-instance-name # Name of your instance
description: example-description # Description of your instance

maintainer:
  name: example-maitainer-name # Your name
  url: http://example.com/ # Your contact (http or mailto)
  repository_url: https://github.com/syuilo/misskey # Repository URL
  feedback_url: https://github.com/syuilo/misskey/issues # Feedback URL (e.g. github issue)


# Final accessible URL seen by a user.
url: https://example.tld/


### Port and TLS settings ######################################
#
# Misskey supports two deployment options for public.
#

# Option 1: With Reverse Proxy
#
#                 +----- https://example.tld/ ------------+
#   +------+      |+-------------+      +----------------+|
#   | User | ---> || Proxy (443) | ---> | Misskey (3000) ||
#   +------+      |+-------------+      +----------------+|
#                 +---------------------------------------+
#
#   You need to setup reverse proxy. (eg. Nginx)
#   You do not define 'https' section.

# Option 2: Standalone
#
#                 +- https://example.tld/ -+
#   +------+      |   +---------------+    |
#   | User | ---> |   | Misskey (443) |    |
#   +------+      |   +---------------+    |
#                 +------------------------+
#
#   You need to run Misskey as root.
#   You need to set Certificate in 'https' section.

# To use option 1, uncomment below line.
# port: 3000    # A port that your Misskey server should listen.

# To use option 2, uncomment below lines.
# port: 443
#
# https:
#   # path for certification
#   key: /etc/letsencrypt/live/example.tld/privkey.pem
#   cert: /etc/letsencrypt/live/example.tld/fullchain.pem

################################################################


mongodb:
  host: localhost
  port: 27017
  db: misskey
  user: example-misskey-user
  pass: example-misskey-pass

# Drive capacity of a local user (MB)
localDriveCapacityMb: 256

# Drive capacity of a remote user (MB)
remoteDriveCapacityMb: 8

# If enabled:
#  Server will not cache remote files (Using direct link instead).
#  You can save your storage.
#
#  NOTE:
#  * Users cannot see remote images when they turn off "Show media from a remote server" setting.
#  * Since thumbnails are not provided, traffic increases.
preventCacheRemoteFiles: false

drive:
  storage: 'db'

  # OR

  # storage: 'minio'
  # bucket:
  # prefix:
  # config:
  #   endPoint:
  #   port:
  #   useSSL:
  #   accessKey:
  #   secretKey:

  # S3 example
  # storage: 'minio'
  # bucket: bucket-name
  # prefix: files
  # config:
  #   endPoint: s3-us-west-2.amazonaws.com
  #   region: us-west-2
  #   useSSL: true
  #   accessKey: XXX
  #   secretKey: YYY

  # S3 example (with CDN, custom domain)
  # storage: 'minio'
  # bucket: drive.example.com
  # prefix: files
  # baseUrl: https://drive.example.com
  # config:
  #   endPoint: s3-us-west-2.amazonaws.com
  #   region: us-west-2
  #   useSSL: true
  #   accessKey: XXX
  #   secretKey: YYY

#
# Below settings are optional
#

# Redis
#redis:
#  host: localhost
#  port: 6379
#  pass: example-pass

# Elasticsearch
#elasticsearch:
#  host: localhost
#  port: 9200
#  pass: null

# reCAPTCHA
#recaptcha:
#  site_key: example-site-key
#  secret_key: example-secret-key

# ServiceWorker
#sw:
#  # Public key of VAPID
#  public_key: example-sw-public-key
#
#  # Private key of VAPID
#  private_key: example-sw-private-key

# Twitter integration
# You need to set the oauth callback url as : https://<your-misskey-instance>/api/tw/cb
#twitter:
#  consumer_key: example-twitter-consumer-key
#  consumer_secret: example-twitter-consumer-secret-key

# Ghost
# Ghost account is an account used for the purpose of delegating
# followers when putting users in the list.
#ghost: user-id-of-your-ghost-account

# Clustering
#clusterLimit: 1

# Summaly proxy
#summalyProxy: "http://example.com"

# User recommendation
#user_recommendation:
#  external: true
#  engine: http://vinayaka.distsn.org/cgi-bin/vinayaka-user-match-misskey-api.cgi?{{host}}+{{user}}+{{limit}}+{{offset}}
#  timeout: 300000
