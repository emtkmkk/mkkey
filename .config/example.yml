name: example-instance-name # Name of your instance
description: example-description # Description of your instance

maintainer:
  name: example-maitainer-name # Your name
  url: http://example.com/ # Your contact (http or mailto)
  repository_url: https://github.com/syuilo/misskey # Repository URL
  feedback_url: https://github.com/syuilo/misskey/issues # Feedback URL (e.g. github issue)

# URL and Port settings overview
# e.g., If you want following structure:
#
#                  +--- https://example.com:123 ---------------+
# +---------+      |+-------------+      +----------------+|
# | Browser | ---> || Proxy (123) | ---> | Misskey (456) ||
# +---------+      |+-------------+      +----------------+|
#                  +---------------------------------------+
#
# You need to set 'https://example.com:123' to 'url' prop and
# You need to set 456 to 'port' prop.

url: http://localhost/

# A port that your Misskey server should listen.
# This value is not a port to use when accessing with a browser.
port: 80

mongodb:
  host: localhost
  port: 27017
  db: example-db
  user: example-misskey-user
  pass: example-misskey-pass

redis:
  host: localhost
  port: 6379
  pass: example-pass

recaptcha:
  site_key: example-site-key
  secret_key: example-secret-key

# If enabled:
#  Server will not cache remote files (Using direct link instead).
#  You can save your storage.
#  Users cannot see remote images when they turn off "Show media from a remote server"ã€€setting.
preventCache: false

#
# Below settings are optional
#

# TLS
# https:
#   # path for certification
#   key: example-tls-key
#   cert: example-tls-cert

# ServiceWorker
# sw:
#   # Public key of VAPID
#   public_key: example-sw-public-key

#   # Private key of VAPID
#   private_key: example-sw-private-key

# google_maps_api_key: example-google-maps-api-key

# Twitter integration
# twitter:
#   consumer_key: example-twitter-consumer-key
#   consumer_secret: example-twitter-consumer-secret-key
